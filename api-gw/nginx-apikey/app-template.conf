js_include conf.d/introspect.js;

map $gateway_apikey $gateway_userid {
  include includes/apikey-to-userid-map.conf;
}

map $gateway_apikey $gateway_email {
  include includes/apikey-to-email-map.conf;
}

map "$arg_apikey $http_x_api_key" $gateway_apikey {
  "~(\w+)" $1;
}

# This is where token introspection responses will be stored if proxy_cache is enabled
# proxy_cache_path /var/cache/nginx/tokens levels=1 keys_zone=token_responses:1m max_size=10m;

server {
    listen 8090;
    error_log /var/log/nginx/error.log info;
    resolver 127.0.0.11 ipv6=off;
    subrequest_output_buffer_size 16k; # To fit a complete response from OAuth server

    set $oauth_token_endpoint "${AUTH_URL}";

    location /v1/books {
      auth_request /_token_introspection;

      # Any member of the token introspection response is available as $sent_http_token_member
      auth_request_set $tokenContext $sent_http_token_tokenContext;
      proxy_set_header Authorization $tokenContext;

      proxy_pass ${INVENTORY_API};
    }

    location /v1/orders {
      auth_request /_token_introspection;

      # Any member of the token introspection response is available as $sent_http_token_member
      auth_request_set $tokenContext $sent_http_token_tokenContext;
      proxy_set_header Authorization $tokenContext;

      proxy_pass ${ORDERS_API};
    }

    location = /_token_introspection {
      # This location implements an auth_request server that uses the JS module
      internal;
      js_content introspectApiKey;
    }

    location = /_exchange_key_to_token {
      internal;
      proxy_method      POST;
      proxy_set_header  Content-Type "application/json";
      proxy_set_body    '{"id": "$gateway_userid", "email": "$gateway_email"}';
      proxy_pass        $oauth_token_endpoint;

      # proxy_cache           token_responses; # Enable caching
      # proxy_cache_key       $arg_apiKeyCtx;   # Cache for each access token
      # proxy_cache_lock      on;              # Duplicate tokens must wait
      # proxy_cache_valid     200 10s;         # How long to use each response
      # proxy_ignore_headers  Cache-Control Expires Set-Cookie;
    }

    location / {
      return 404;
    }
}
